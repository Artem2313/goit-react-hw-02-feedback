{"version":3,"sources":["components/Feedback/FeedbackChoice/FeedbackChoice.jsx","components/Feedback/Stat/Stat.jsx","components/Feedback/MainSection/MainSection.jsx","components/Feedback/Feedback.jsx","components/App.jsx","index.js"],"names":["FeedbackChoice","options","onLeaveFeedback","Object","keys","map","option","type","name","key","shortid","generate","onClick","Stat","good","neutral","bad","countTotalFeedbacks","countPositiveFeedbacksPercentage","value","MainSection","title","handleLeaveFeedback","Feedback","state","handleLeaveFeedbacks","e","target","setState","prevState","Total","Math","round","this","Component","App","ReactDOM","render","document","querySelector"],"mappings":"2RA0BeA,EAtBQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACjC,OACE,6BACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAM,OAC9B,4BACEC,KAAK,SACLC,KAAMF,EACNG,IAAKC,IAAQC,WACbC,QAASV,GAERI,QCoBIO,EA/BF,SAAC,GAMP,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,iCAEA,OACE,iCACE,0CACA,6BACE,uBAAGC,MAAOL,GAAV,SAAuBA,GACvB,uBAAGK,MAAOJ,GAAV,YAA6BA,GAC7B,uBAAGI,MAAOH,GAAV,QAAqBA,GACrB,uBAAGG,MAAOF,GAAV,UAAuCA,GACvC,uBAAGE,MAAOD,GAAV,aACaA,EADb,QCuBOE,EApCK,SAAC,GASd,IARLC,EAQI,EARJA,MACAC,EAOI,EAPJA,oBACArB,EAMI,EANJA,QACAa,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,IACAC,EAEI,EAFJA,oBACAC,EACI,EADJA,iCAEA,OACE,oCACE,4BAAKG,GACL,kBAAC,EAAD,CAAgBpB,QAASA,EAASC,gBAAiBoB,IACnD,kBAAC,EAAD,CACER,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,oBAAqBA,EACrBC,iCAAkCA,MCrBrBK,E,2MACnBC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,qBAAuB,SAAAC,GAAM,IACnBlB,EAASkB,EAAEC,OAAXnB,KACR,EAAKoB,UAAS,SAAAC,GAAS,sBAAQrB,EAAOqB,EAAUrB,GAAQ,O,EAG1DS,oBAAsB,kBACpB,EAAKO,MAAMV,KAAO,EAAKU,MAAMT,QAAU,EAAKS,MAAMR,K,EAEpDE,iCAAmC,WACjC,IAAMY,EAAQ,EAAKb,sBACXH,EAAS,EAAKU,MAAdV,KACR,OAAiB,IAAVgB,EAAc,EAAIC,KAAKC,MAAOlB,EAAOgB,EAAS,M,wEAG7C,IAAD,EACwBG,KAAKT,MAA5BV,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,6BACE,kBAAC,EAAD,CACEK,MAAM,6BACNP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLM,oBAAqBW,KAAKR,qBAC1BxB,QAAS,CAAEa,OAAMC,UAASC,OAC1BC,oBAAqBgB,KAAKhB,sBAC1BC,iCAAkCe,KAAKf,0C,GAjCXgB,aCIvBC,EAJH,WACV,OAAO,kBAAC,EAAD,OCATC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.22de1e63.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\n\nconst FeedbackChoice = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {Object.keys(options).map(option => (\n        <button\n          type=\"button\"\n          name={option}\n          key={shortid.generate()}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackChoice.propTypes = {\n  options: PropTypes.shape({}).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackChoice;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Stat = ({\n  good,\n  neutral,\n  bad,\n  countTotalFeedbacks,\n  countPositiveFeedbacksPercentage,\n}) => {\n  return (\n    <section>\n      <h2>Statistics</h2>\n      <div>\n        <p value={good}>good: {good}</p>\n        <p value={neutral}>neutral: {neutral}</p>\n        <p value={bad}>bad: {bad}</p>\n        <p value={countTotalFeedbacks}>Total: {countTotalFeedbacks}</p>\n        <p value={countPositiveFeedbacksPercentage}>\n          Positive: {countPositiveFeedbacksPercentage}%\n        </p>\n      </div>\n    </section>\n  );\n};\n\nStat.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  countTotalFeedbacks: PropTypes.number.isRequired,\n  countPositiveFeedbacksPercentage: PropTypes.number.isRequired,\n};\n\nexport default Stat;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FeedbackChoice from '../FeedbackChoice/FeedbackChoice';\nimport Stat from '../Stat/Stat';\n\nconst MainSection = ({\n  title,\n  handleLeaveFeedback,\n  options,\n  good,\n  neutral,\n  bad,\n  countTotalFeedbacks,\n  countPositiveFeedbacksPercentage,\n}) => {\n  return (\n    <>\n      <h1>{title}</h1>\n      <FeedbackChoice options={options} onLeaveFeedback={handleLeaveFeedback} />\n      <Stat\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        countTotalFeedbacks={countTotalFeedbacks}\n        countPositiveFeedbacksPercentage={countPositiveFeedbacksPercentage}\n      />\n    </>\n  );\n};\n\nMainSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  handleLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.shape({}).isRequired,\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  countTotalFeedbacks: PropTypes.number.isRequired,\n  countPositiveFeedbacksPercentage: PropTypes.number.isRequired,\n};\n\nexport default MainSection;\n","import React, { Component } from 'react';\nimport MainSection from './MainSection/MainSection';\n\nexport default class Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleLeaveFeedbacks = e => {\n    const { name } = e.target;\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedbacks = () =>\n    this.state.good + this.state.neutral + this.state.bad;\n\n  countPositiveFeedbacksPercentage = () => {\n    const Total = this.countTotalFeedbacks();\n    const { good } = this.state;\n    return Total === 0 ? 0 : Math.round((good / Total) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div>\n        <MainSection\n          title=\"Please leave your feedback\"\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          handleLeaveFeedback={this.handleLeaveFeedbacks}\n          options={{ good, neutral, bad }}\n          countTotalFeedbacks={this.countTotalFeedbacks()}\n          countPositiveFeedbacksPercentage={this.countPositiveFeedbacksPercentage()}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Feedback from './Feedback/Feedback';\n\nconst App = () => {\n  return <Feedback />;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}